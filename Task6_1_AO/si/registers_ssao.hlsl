#if !defined(REGISTERS_SSAO_FX)
#define REGISTERS_SSAO_FX
#include <sys_resource_defines.hlsl>

BEGIN_REFLECTION_TABLE(SSAO)

DECLARE_USED_COMMON_CONST_BUFFER(CB_OBJ_MATERIAL_DATA)
DECLARE_USED_COMMON_CONST_BUFFER(CB_SCREEN_RECT_DATA)

CONST_BUFFER_DYNAMIC_BEGIN_USAGE(CB_DYNAMIC_PASS_SSAO, USAGE_PS|USAGE_CS)
   DECLARE_CONST(PS_REG_SSAO_SCREEN,         1);// 4
   DECLARE_CONST(PS_REG_SSAO_PARAMS,         1);// x - radius, y - depth, z - thresholdm, w - weapon z-scale
   DECLARE_CONST(PS_REG_SSAO_MV_1,           1);
   DECLARE_CONST(PS_REG_SSAO_MV_2,           1);
   DECLARE_CONST(PS_REG_SSAO_MV_3,           1);
   DECLARE_CONST(SSAO_FRUSTUM_SCALE,         1);
   DECLARE_CONST(SSAO_FRUSTUM_SCALE_FPMODEL, 1);
   DECLARE_CONST(SSAO_TEX_COORD_SCALE,       1);
CONST_BUFFER_END;

//DECLARE_TEX_2D      (SSAO_DEPTH,      0, PER_DRAW_TX_SET, 1, PS_SMP_CLAMP_POINT,  0); 
//DECLARE_TEX_2D      (SSAO_DEPTH_HALF, 1, PER_DRAW_TX_SET, 1, PS_SMP_CLAMP_POINT,  0); 
//DECLARE_TEX_2D      (SSAO_NOISE,      2, PER_DRAW_TX_SET, 1, PS_SMP_WRAP_POINT,   0); 
//DECLARE_TEX_2D      (SSAO_NORMALS,    3, PER_DRAW_TX_SET, 1, PS_SMP_CLAMP_POINT,  0); 
//DECLARE_TEX_2D      (SSAO_MASK,       4, PER_DRAW_TX_SET, 1, PS_SMP_CLAMP_LINEAR, 0); 
//
//DECLARE_UAV_TEX_2D_UNORM4(SSAO_OUT, 0, PER_DRAW_TX_SET, 1);

END_REFLECTION_TABLE

#endif
